{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Constants.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth-service.component.ts","./src/app/auth/core.module.ts","./src/app/counter/counter.component.ts","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAO,MAAM,SAAS;;AACN,iBAAO,GAAG,wBAAwB,CAAC;AAEnC,oBAAU,GAAG,wBAAwB,CAAC;AACtC,sBAAY,GAAG,wBAAwB,CAAC;AAGxC,kBAAQ,GAAG,eAAe,CAAC;;;;;;;;;;;;;ACP3C;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAMnC,MAAM,YAAY;IAJzB;QAKE,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,uEACE;QAAA,0EAA6B;QAC7B,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACR,4DAAO;;6FDCM,YAAY;cAJxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;aACpC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACT;AAEA;AACkB;AACX;AACS;AACQ;AACvB;;;;AA8BzC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAXJ;YACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;YACjE,qEAAgB;YAChB,0DAAW;YACX,6DAAU;YACV,4DAAY,CAAC,OAAO,CAAC;gBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;gBACzD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;gBAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mFAAkB,EAAE;aACtD,CAAC;SACH;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,6EAAgB;QAChB,kEAAa;QACb,2EAAgB;QAChB,mFAAkB,sFAIlB,qEAAgB;QAChB,0DAAW;QACX,6DAAU;6FAUD,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6EAAgB;oBAChB,kEAAa;oBACb,2EAAgB;oBAChB,mFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;oBACjE,qEAAgB;oBAChB,0DAAW;oBACX,6DAAU;oBACV,4DAAY,CAAC,OAAO,CAAC;wBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;wBACzD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;wBAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mFAAkB,EAAE;qBACtD,CAAC;iBACH;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4H;AACjF;AAEH;AACH;AACI;;;;AAIlC,MAAM,sBAAsB;IACjC,YAAoB,YAAyB,EACnC,OAAe;QADL,iBAAY,GAAZ,YAAY,CAAa;QACnC,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE9B,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,oDAAS,CAAC,OAAO,CAAC,EAAE;YACzC,OAAO,iDAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC1D,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC,CAAC;gBAC1E,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;gBACvC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE;oBACrD,IAAI,SAAS,GAAG,KAA0B,CAAC;oBAC3C,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,MAAM,KAAK,GAAG,CAAC,EAAE;wBACvE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;qBAC1C;gBACH,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC;SACL;aACI;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;IACH,CAAC;;4FApBU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACK;AACP;AACV;;;AAKxB,MAAM,WAAW;IAOtB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAJnC,yBAAoB,GAAG,IAAI,4CAAO,EAAW,CAAC;QAEtD,iBAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAGtD,MAAM,WAAW,GAAG;YAClB,SAAS,EAAE,oDAAS,CAAC,YAAY;YACjC,SAAS,EAAE,oDAAS,CAAC,QAAQ;YAC7B,YAAY,EAAE,GAAG,oDAAS,CAAC,UAAU,iBAAiB;YACtD,KAAK,EAAE,qBAAqB;YAC5B,aAAa,EAAE,MAAM;YACrB,wBAAwB,EAAE,GAAG,oDAAS,CAAC,UAAU,kBAAkB;YACnE,oBAAoB,EAAE,IAAI;YAC1B,mBAAmB,EAAE,GAAG,oDAAS,CAAC,UAAU,6BAA6B;YACzE,cAAc;YACd,yCAAyC;YACzC,wFAAwF;YACxF,gEAAgE;YAChE,4DAA4D;YAC5D,4DAA4D;YAC5D,2JAA2J;YAC3J,IAAI;SACL,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,uDAAW,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE;YACjD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;IAC5C,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7C,MAAM,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;IACrD,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7C,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC3B,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;iBACI;gBACH,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;sEAjFU,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACgB;AACW;AACb;;AAWhD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBALR;QACP,mEAAW;QACX,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,gFAAsB,EAAE,KAAK,EAAE,IAAI,EAAE;KAChF,YANQ,EAAE;6FAQF,UAAU;cATtB,sDAAQ;eAAC;gBACN,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,EAAE;gBACX,YAAY,EAAE,EAAE;gBAChB,SAAS,EAAE;oBACP,mEAAW;oBACX,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,gFAAsB,EAAE,KAAK,EAAE,IAAI,EAAE;iBAChF;aACJ;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAA0C;;AAMnC,MAAM,gBAAgB;IAJ7B;QAKS,iBAAY,GAAG,CAAC,CAAC;KAKzB;IAHQ,gBAAgB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCN7B,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAEhB,oEAAG;QAAA,4GAAiD;QAAA,4DAAI;QAExD,uEAAsB;QAAA,0EAAe;QAAA,yEAAQ;QAAA,uDAAkB;QAAA,4DAAS;QAAA,4DAAI;QAE5E,4EAA6D;QAA7B,wIAAS,sBAAkB,IAAC;QAAC,oEAAS;QAAA,4DAAS;;QAFlC,0DAAkB;QAAlB,iFAAkB;;6FDElD,gBAAgB;cAJ5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,0BAA0B;aACxC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAET;;;;;ICEzC,oEAAsB;IAAA,qEAAI;IAAA,qEAAU;IAAA,4DAAK;IAAA,4DAAI;;;IAYzC,qEACE;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IACjC,4DAAK;;;IAJC,0DAAmB;IAAnB,iFAAmB;IACnB,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAAsB;IAAtB,oFAAsB;;;IAdhC,2EACE;IAAA,wEACE;IAAA,qEACE;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,mEAAO;IAAA,4DAAK;IAClB,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,sHACE;IAKJ,4DAAQ;IACV,4DAAQ;;;IAPA,2DAAkC;IAAlC,qFAAkC;;ADRnC,MAAM,kBAAkB;IAG7B,YAAY,IAAgB;QAC1B,IAAI,CAAC,GAAG,CAAoB,oDAAS,CAAC,OAAO,GAAG,kBAAkB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrF,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;oFAPU,kBAAkB;kGAAlB,kBAAkB;QCR/B,wEAAoB;QAAA,2EAAgB;QAAA,4DAAK;QAEzC,oEAAG;QAAA,qHAA0D;QAAA,4DAAI;QAEjE,0GAAsB;QAEtB,mHACE;;QAHC,0DAAkB;QAAlB,gFAAkB;QAE2C,0DAAiB;QAAjB,+EAAiB;;6FDEpE,kBAAkB;cAJ9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAA0C;;AAMnC,MAAM,aAAa;;0EAAb,aAAa;6FAAb,aAAa;QCN1B,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,oEAAG;QAAA,mHAAwD;QAAA,4DAAI;QAC/D,qEACE;QAAA,qEAAI;QAAA,uEAA+B;QAAA,uEAAY;QAAA,4DAAI;QAAC,gEAAI;QAAA,uEAAiE;QAAA,8DAAE;QAAA,4DAAI;QAAC,gGAAmC;QAAA,4DAAK;QACxK,sEAAI;QAAA,wEAA8B;QAAA,mEAAO;QAAA,4DAAI;QAAC,iEAAI;QAAA,wEAAyC;QAAA,sEAAU;QAAA,4DAAI;QAAC,iFAAoB;QAAA,4DAAK;QACnI,sEAAI;QAAA,wEAAmC;QAAA,qEAAS;QAAA,4DAAI;QAAC,mFAAsB;QAAA,4DAAK;QAClF,4DAAK;QACL,qEAAG;QAAA,uGAA2C;QAAA,4DAAI;QAClD,sEACE;QAAA,sEAAI;QAAA,0EAAQ;QAAA,kFAAsB;QAAA,4DAAS;QAAA,iFAAqB;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAAC,kEAAK;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QAAC,4EAAe;QAAA,4DAAK;QACxH,sEAAI;QAAA,0EAAQ;QAAA,mFAAuB;QAAA,4DAAS;QAAA,0GAA8C;QAAA,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QAAA,qNAAyJ;QAAA,4DAAK;QAC7Q,sEAAI;QAAA,0EAAQ;QAAA,uFAA2B;QAAA,4DAAS;QAAA,mIAAuE;QAAA,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAAC,iGAAoC;QAAA,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QAAC,0HAA6D;QAAA,4DAAK;QACjR,4DAAK;QACL,qEAAG;QAAA,gEAAI;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAAC,iLAAoH;QAAA,wEAAM;QAAA,8DAAE;QAAA,4DAAO;QAAC,4EAAe;QAAA,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QAAA,sEAAU;QAAA,wEAAM;QAAA,+DAAG;QAAA,4DAAO;QAAC,+FAAkC;QAAA,4DAAI;;6FDPzP,aAAa;cAJzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;aACrC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;;;AAOnC,MAAM,gBAAgB;IAL7B;QAME,eAAU,GAAG,KAAK,CAAC;KASpB;IAPC,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEACE;QAAA,yEAGE;QAAA,yEACE;QAAA,uEAA6C;QAAA,yEAAc;QAAA,4DAAI;QAC/D,4EASE;QAFA,wIAAS,YAAQ,IAAC;QAElB,qEAAyC;QAC3C,4DAAS;QACT,yEAIE;QAAA,wEACE;QAAA,wEAGE;QAAA,wEAAmD;QAAA,gEAAI;QAAA,4DAAI;QAC7D,4DAAK;QACL,yEACE;QAAA,wEAA+D;QAAA,+EAAmB;QAAA,4DAAI;QACxF,4DAAK;QACL,yEACE;QAAA,wEAA0D;QAAA,mEAAO;QAAA,4DAAI;QACvE,4DAAK;QACL,yEACE;QAAA,wEAA6D;QAAA,sEAAU;QAAA,4DAAI;QAC7E,4DAAK;QAGP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAS;;QArCqB,0DAAoB;QAApB,8IAAoB;QAO1C,0DAAiC;QAAjC,0FAAiC;QAOjC,0DAAgC;QAAhC,2JAAgC;QAI1B,0DAAoC;QAApC,oJAAoC;QAER,0DAAoB;QAApB,8IAAoB;QAE/B,0DAAoC;QAApC,oJAAoC;QACzB,0DAAgC;QAAhC,8IAAgC;QAE3C,0DAAoC;QAApC,oJAAoC;QACzB,0DAA2B;QAA3B,8IAA2B;QAEtC,0DAAoC;QAApC,oJAAoC;QACzB,0DAA8B;QAA9B,8IAA8B;;6FD3B3D,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAElD,SAAS,UAAU;IACxB,OAAO,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,MAAM,SAAS,GAAG;IAChB,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;CAC1D,CAAC;AAGF,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Constants {\r\n  public static apiRoot = 'https://localhost:6001';\r\n\r\n  public static clientRoot = 'https://localhost:5003';\r\n  public static stsAuthority = 'https://localhost:5001';\r\n\r\n\r\n  public static clientId = 'angularClient';\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { CoreModule } from './auth/core.module';\r\nimport { SigninRedirectCallbackComponent } from './auth/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './auth/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './auth/unauthorized.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Constants } from '../Constants';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(private _authService: AuthService,\r\n    private _router: Router) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(Constants.apiRoot)) {\r\n      return from(this._authService.getAccessToken().then(token => {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        const authReq = req.clone({ headers });\r\n        return next.handle(authReq).pipe(tap(_ => { }, error => {\r\n          var respError = error as HttpErrorResponse;\r\n          if (respError && (respError.status === 401 || respError.status === 403)) {\r\n            this._router.navigate(['/unauthorized']);\r\n          }\r\n        })).toPromise();\r\n      }));\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserManager, User } from 'oidc-client';\r\nimport { Constants } from '../Constants';\r\nimport { Subject } from 'rxjs';\r\nimport { CoreModule } from './core.module';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _userManager: UserManager;\r\n  private _user: User;\r\n  private _loginChangedSubject = new Subject<boolean>();\r\n\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n\r\n  constructor(private _httpClient: HttpClient) {\r\n    const stsSettings = {\r\n      authority: Constants.stsAuthority,\r\n      client_id: Constants.clientId,\r\n      redirect_uri: `${Constants.clientRoot}signin-callback`,\r\n      scope: 'openid profile api1',\r\n      response_type: 'code',\r\n      post_logout_redirect_uri: `${Constants.clientRoot}signout-callback`,\r\n      automaticSilentRenew: true,\r\n      silent_redirect_uri: `${Constants.clientRoot}assets/silent-callback.html`\r\n      // metadata: {\r\n      //   issuer: `${Constants.stsAuthority}`,\r\n      //   authorization_endpoint: `${Constants.stsAuthority}authorize?audience=projects-api`,\r\n      //   jwks_uri: `${Constants.stsAuthority}.well-known/jwks.json`,\r\n      //   token_endpoint: `${Constants.stsAuthority}oauth/token`,\r\n      //   userinfo_endpoint: `${Constants.stsAuthority}userinfo`,\r\n      //   end_session_endpoint: `${Constants.stsAuthority}v2/logout?client_id=${Constants.clientId}&returnTo=${encodeURI(Constants.clientRoot)}signout-callback`\r\n      // }\r\n    };\r\n    this._userManager = new UserManager(stsSettings);\r\n    this._userManager.events.addAccessTokenExpired(_ => {\r\n      this._loginChangedSubject.next(false);\r\n    });\r\n    this._userManager.events.addUserLoaded(user => {\r\n      if (this._user !== user) {\r\n        this._user = user;\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  login() {\r\n    return this._userManager.signinRedirect();\r\n  }\r\n\r\n  isLoggedIn(): Promise<boolean> {\r\n    return this._userManager.getUser().then(user => {\r\n      const userCurrent = !!user && !user.expired;\r\n      if (this._user !== user) {\r\n        this._loginChangedSubject.next(userCurrent);\r\n      }\r\n      this._user = user;\r\n      return userCurrent;\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n    return this._userManager.signinRedirectCallback().then(user => {\r\n      this._user = user;\r\n      this._loginChangedSubject.next(!!user && !user.expired);\r\n      return user;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this._userManager.signoutRedirect();\r\n  }\r\n\r\n  completeLogout() {\r\n    this._user = null;\r\n    this._loginChangedSubject.next(false);\r\n    return this._userManager.signoutRedirectCallback();\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this._userManager.getUser().then(user => {\r\n      if (!!user && !user.expired) {\r\n        return user.access_token;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptorService } from './auth-interceptor.service';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [\r\n        AuthService,\r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true }\r\n    ],\r\n})\r\nexport class CoreModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from '../Constants';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient) {\r\n    http.get<WeatherForecast[]>(Constants.apiRoot + '/weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Angular8Client</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/angular-info']\">Angular Information</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\">Counter</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\">Fetch data</a>\r\n          </li>\r\n\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}